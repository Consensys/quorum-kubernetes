
{{- if not .Values.cluster.cloudNativeServices }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "goquorum-node.fullname" . }}-hooks-sa
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook-delete-policy": before-hook-creation
    "helm.sh/hook": "pre-install,pre-delete,post-delete"  

{{- end}}

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ include "goquorum-node.fullname" . }}-hooks-role
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook-delete-policy": before-hook-creation
    "helm.sh/hook": "pre-install,pre-delete,post-delete"
rules:
  - apiGroups: [""]
    resources: ["secrets", "configmaps"]
    verbs: ["create", "get", "list", "update", "delete", "patch"]
  - apiGroups: [""]
    resources: ["services"]
    verbs: ["get", "list"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ include "goquorum-node.fullname" . }}-hooks-rb
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook-delete-policy": before-hook-creation
    "helm.sh/hook": "pre-install,pre-delete,post-delete"    
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ include "goquorum-node.fullname" . }}-hooks-role
subjects:
- kind: ServiceAccount
  namespace:  {{ .Release.Namespace }}
{{- if and (eq .Values.cluster.provider "azure") (.Values.cluster.cloudNativeServices) }}
    name: {{ .Values.azure.serviceAccountName }}
{{- else if and (eq .Values.cluster.provider "aws") (.Values.cluster.cloudNativeServices) }}
    name: {{ .Values.aws.serviceAccountName }}
{{- else }}
    name: {{ include "goquorum-node.fullname" . }}-hooks-sa
{{- end}}