---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "quorum-node.fullname" . }}-sa
  namespace: {{ .Release.Namespace }}

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ include "quorum-node.fullname" . }}-role
  namespace: {{ .Release.Namespace }}
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get"]
  - apiGroups: [""]
    resources: ["services"]
    verbs: ["get", "list"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ include "quorum-node.fullname" . }}-rb
  namespace: {{ .Release.Namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ include "quorum-node.fullname" . }}-role
subjects:
- kind: ServiceAccount
  name: {{ include "quorum-node.fullname" . }}-sa
  namespace:  {{ .Release.Namespace }}

---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: {{ include "quorum-node.fullname" . }}-storage
provisioner: kubernetes.io/azure-file
mountOptions:
  - dir_mode=0755
  - file_mode=0755
  - uid=0
  - gid=0
  - mfsymlinks
allowVolumeExpansion: true
parameters:
  skuName: Standard_LRS

---
{{- if .Values.node.quorumConfig.storage.enabled }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name:  {{ include "quorum-node.fullname" . }}-pvc
  namespace: {{ .Release.Namespace }}
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: {{ include "quorum-node.fullname" . }}-storage
  resources:
    requests:
      storage: "{{ .Values.node.quorumConfig.storage.pvcSizeLimit }}"
{{- end }}

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "quorum-node.fullname" . }}
  labels:
    app: {{ template "quorum-node.name" . }}
    chart: {{ template "quorum-node.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    namespace: {{ .Release.Namespace }}
    component: {{ .Release.Name }}
    app.kubernetes.io/name: {{ include "quorum-node.fullname" . }}
    helm.sh/chart: {{ include "quorum-node.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  podManagementPolicy: OrderedReady
  selector:
    matchLabels:
      app: {{ include "quorum-node.fullname" . }}
      release: {{ .Release.Name }}
      component: {{ .Release.Name }}
      app.kubernetes.io/name: {{ include "quorum-node.fullname" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  serviceName: {{ include "quorum-node.fullname" . }}
  template:
    metadata:
      labels:
        app: {{ include "quorum-node.fullname" . }}
        release: {{ .Release.Name }}
        component: {{ .Release.Name }}
        app.kubernetes.io/name: {{ include "quorum-node.fullname" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9545"
        prometheus.io/path: "/debug/metrics/prometheus"        
    spec:
      serviceAccountName: {{ include "quorum-node.fullname" . }}-sa
      containers:
      {{- if .Values.nodeFlags.privacy }}
      - name: {{ include "quorum-node.fullname" . }}-tessera
        image: {{ .Values.image.tessera.repository }}:{{ .Values.image.tessera.tag }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        resources:
          requests:
            cpu: "{{ .Values.node.resources.cpuRequest }}"
            memory: "{{ .Values.node.resources.memRequest }}"
          limits:
            cpu: "{{ .Values.node.resources.cpuLimit }}"
            memory: "{{ .Values.node.resources.memLimit }}"
        env:
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: TESSERA_CONFIG_TYPE
            value: "-09"

        volumeMounts:
          - name: tessera-secrets
            mountPath: {{ .Values.node.quorumConfig.keysPath }}
            readOnly: true
          - name: data
            mountPath: {{ .Values.node.quorumConfig.dataDir }}
          - name: ipc-volume
            mountPath: /ipc/
          - name: tessera-peers
            mountPath: /config/tessera-peers
        ports:
          - name: tessera
            containerPort: {{ .Values.node.quorumConfig.tessera.port }}
            protocol: TCP
          - name: tessera-tp
            containerPort: {{ .Values.node.quorumConfig.tessera.tpport }}
            protocol: TCP
          - name: tessera-q2t
            containerPort: {{ .Values.node.quorumConfig.tessera.q2tport }}
            protocol: TCP
        command:
          - /bin/sh
          - -c
        args:
          - |
            exec
            mkdir -p /ipc/tm/;
            mkdir {{ .Values.node.quorumConfig.dataDir }}/tm/;
            cp {{ .Values.node.quorumConfig.keysPath }}/tm.* {{ .Values.node.quorumConfig.dataDir }}/tm/ ;

                cat <<EOF > {{ .Values.node.quorumConfig.dataDir }}/tm/tessera-config-09.json
                {
                  "useWhiteList": false,
                  "jdbc": {
                    "username": "sa",
                    "password": "",
                    "url": "jdbc:h2:{{ .Values.node.quorumConfig.dataDir }}/tm/db;MODE=Oracle;TRACE_LEVEL_SYSTEM_OUT=0",
                    "autoCreateTables": true
                  },
                  "serverConfigs":[
                  {
                    "app":"ThirdParty",
                    "enabled": true,
                    "serverAddress": "http://{{ include "quorum-node.fullname" . }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.node.quorumConfig.tessera.tpport }}",
                    "communicationType" : "REST"
                  },
                  {
                    "app":"Q2T",
                    "enabled": true,
                    "serverAddress": "http://{{ include "quorum-node.fullname" . }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.node.quorumConfig.tessera.q2tport }}",
                    "sslConfig": {
                      "tls": "OFF"
                    },
                    "communicationType" : "REST"
                  },
                  {
                    "app":"P2P",
                    "enabled": true,
                    "serverAddress": "http://{{ include "quorum-node.fullname" . }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.node.quorumConfig.tessera.port }}",
                    "sslConfig": {
                      "tls": "OFF"
                    },
                    "communicationType" : "REST"
                  }
                  ],
                  "peer": $$(cat /config/tessera-peers/tesseraPeers),
                  "keys": {
                    "passwords": [],
                    "keyData": [
                      {
                        "config": $$(cat {{ .Values.node.quorumConfig.dataDir }}/tm/tm.key),
                        "publicKey": "$$(cat {{ .Values.node.quorumConfig.dataDir }}/tm/tm.pub)"
                      }
                    ]
                  },
                  "alwaysSendTo": []
                }
            EOF

                cat {{ .Values.node.quorumConfig.dataDir }}/tm/tessera-config-09.json
                /tessera/bin/tessera -configfile {{ .Values.node.quorumConfig.dataDir }}/tm/tessera-config-09.json

      {{- end }}

      - name: {{ include "quorum-node.fullname" . }}-quorum
        image: {{ .Values.image.quorum.repository }}:{{ .Values.image.quorum.tag }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        resources:
          requests:
            cpu: "{{ .Values.node.resources.cpuRequest }}"
            memory: "{{ .Values.node.resources.memRequest }}"
          limits:
            cpu: "{{ .Values.node.resources.cpuLimit }}"
            memory: "{{ .Values.node.resources.memLimit }}"
        env:
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: QUORUM_NETWORK_ID
            value: "{{ .Values.node.quorumConfig.networkId }}"
          - name: QUORUM_CONSENSUS
            value: istanbul
          {{- if .Values.nodeFlags.privacy }}
          - name: QUORUM_PTM_URL
            value: "http://{{ include "quorum-node.fullname" . }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.node.quorumConfig.tessera.q2tport }}"
          {{ else }}
          - name: PRIVATE_CONFIG
            value: "ignore"
          {{- end }}
        volumeMounts:
          - name: secrets
            mountPath: {{ .Values.node.quorumConfig.keysPath }}
            readOnly: true
          - name: genesis-file
            mountPath: /config/quorum/
            readOnly: true
          - name: static-nodes
            mountPath: /config/static/
            readOnly: true
          - name: data
            mountPath: {{ .Values.node.quorumConfig.dataDir }}
          - name: ipc-volume
            mountPath: /ipc/
        ports:
          - name: json-rpc
            containerPort: {{ .Values.node.quorumConfig.rpc.port }}
            protocol: TCP
          - name: ws
            containerPort: {{ .Values.node.quorumConfig.ws.port }}
            protocol: TCP
          - name: graphql
            containerPort: {{ .Values.node.quorumConfig.graphql.port }}
            protocol: TCP
          - name: rlpx
            containerPort: {{ .Values.node.quorumConfig.p2p.port }}
            protocol: TCP
          - name: discovery
            containerPort: {{ .Values.node.quorumConfig.p2p.port }}
            protocol: UDP
        command:
          - /bin/sh
          - -c
        args:
          - |
            exec
            mkdir -p /ipc/geth/
            apk add curl
          {{- if .Values.nodeFlags.privacy }}
            until $(curl --output /dev/null --silent --head --fail http://127.0.0.1:9000/upcheck); do echo 'waiting for transaction manager to start...'; sleep 5; done;
            echo 'transaction manager is up';
          {{- end }}
            geth --datadir={{ .Values.node.quorumConfig.dataDir }}/dd init {{ .Values.node.quorumConfig.genesisPath }}
            cp {{ .Values.node.quorumConfig.keysPath }}/nodekey {{ .Values.node.quorumConfig.dataDir }}/dd/geth/nodekey
            cp /config/static/static-nodes.json {{ .Values.node.quorumConfig.dataDir }}/dd/geth/static-nodes.json

            geth \
            --datadir {{ .Values.node.quorumConfig.dataDir }}/dd \
            --nodiscover \
            --nat extip:$POD_IP \
            --verbosity {{ .Values.node.quorumConfig.log.verbosity }} \
            --istanbul.blockperiod {{ .Values.node.quorumConfig.miner.blockPeriod }} --mine --minerthreads {{ .Values.node.quorumConfig.miner.threads }} --miner.gasprice 0 --emitcheckpoints \
            --syncmode full --nousb \
            --ipcpath /ipc/geth/geth.ipc \
            --metrics --pprof --pprofaddr {{ .Values.node.quorumConfig.metrics.pprofaddr | quote }} --pprofport {{ .Values.node.quorumConfig.metrics.pprofport }} \
            --networkid {{ .Values.node.quorumConfig.networkId }} \
            --port {{ .Values.node.quorumConfig.p2p.port }} \
          {{- if .Values.node.quorumConfig.rpc.enabled }}
            --rpc --rpcaddr {{ .Values.node.quorumConfig.rpc.addr }} --rpcport {{ .Values.node.quorumConfig.rpc.port }} --rpccorsdomain {{ .Values.node.quorumConfig.rpc.corsDomain | quote }} --rpcvhosts {{ .Values.node.quorumConfig.rpc.vHosts | quote }} --rpcapi {{ .Values.node.quorumConfig.rpc.api | quote }} \
          {{- end }}
          {{- if .Values.node.quorumConfig.ws.enabled }}
            --ws --wsaddr {{ .Values.node.quorumConfig.ws.addr }} --wsport {{ .Values.node.quorumConfig.ws.port }} --wsorigins {{ .Values.node.quorumConfig.ws.origins | quote }} --wsapi {{ .Values.node.quorumConfig.ws.api | quote }} \
          {{- end }}
          {{- if hasKey .Values.node.quorumConfig.account "unlock" }}
             --unlock {{ .Values.node.quorumConfig.account.unlock }} --allow-insecure-unlock --password {{ .Values.node.quorumConfig.account.password }} \
          {{- end }}


      volumes:
      - name: secrets
        secret:
          secretName: {{ include "quorum-node.fullname" . }}-keys
      - name: genesis-file
        configMap:
          name: quorum-genesis
          items:
            - key: genesis.json
              path: genesis.json
      - name: static-nodes
        configMap:
          name: quorum-node-enodes
          items:
            - key: static-nodes.json
              path: static-nodes.json
      - name: ipc-volume
        emptyDir: {}
      - name: data
        {{- if .Values.node.quorumConfig.storage.enabled }}
        persistentVolumeClaim:
          claimName: {{ include "quorum-node.fullname" . }}-pvc
        {{- else }}
        emptyDir: {}
        {{- end }}
      {{- if .Values.nodeFlags.privacy }}
      - name: tessera-peers
        configMap:
          name: tessera-peers
          items:
            - key: tesseraPeers
              path: tesseraPeers
      - name: tessera-secrets
        secret:
          secretName: {{ include "quorum-node.fullname" . }}-tessera-keys
      {{- end }}
