---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
  namespace: {{ .Release.Namespace }}

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus
rules:
  - apiGroups: [""]
    resources:
      - nodes
      - nodes/proxy
      - services
      - endpoints
      - pods
    verbs: ["get", "list", "watch"]
  - apiGroups:
      - extensions
    resources:
      - ingresses
    verbs: ["get", "list", "watch"]
  - nonResourceURLs: ["/debug/metrics/prometheus", "/metrics"]
    verbs: ["get"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
- kind: ServiceAccount
  name: prometheus
  namespace: {{ .Release.Namespace }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "quorum-monitoring.fullname" . }}-prometheus
  labels:
    app: {{ template "quorum-monitoring.name" . }}
    chart: {{ template "quorum-monitoring.chart" . }}
    release: {{ .Release.Name }}
    namespace: {{ .Release.Namespace }}
    heritage: {{ .Release.Service }}
    component: prometheus
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      component: prometheus
  template:
    metadata:
      labels:
        app: {{ template "quorum-monitoring.name" . }}
        release: {{ .Release.Name }}
        component: prometheus
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
    spec:
      serviceAccountName: prometheus
      containers:
        - name: prometheus
          image: {{ .Values.image.prometheus.repository }}:{{ .Values.image.prometheus.tag }}
          imagePullPolicy: {{ .Values.image.prometheus.pullPolicy }}
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 512Mi
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          volumeMounts:
            - name: prometheus-config
              mountPath: /etc/prometheus/
              readOnly: true
          ports:
            - containerPort: 9090
              name: http
              protocol: TCP
          command:
            - /bin/prometheus
          args:
            - --config.file=/etc/prometheus/prometheus.yml
      volumes:
        - name: prometheus-config
          configMap:
            name: {{ template "quorum-monitoring.fullname" . }}-prometheus-configmap
            items:
              - key: prometheus.yml
                path: prometheus.yml
