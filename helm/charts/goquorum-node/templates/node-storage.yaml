
{{- if eq .Values.cluster.provider "azure" }}

---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: {{ include "goquorum-node.fullname" . }}-storage
  namespace: {{ .Release.Namespace }}
provisioner: kubernetes.io/azure-file
reclaimPolicy: "{{.Values.storage.reclaimPolicy }}"
allowVolumeExpansion: true
mountOptions:
  - dir_mode=0755
  - file_mode=0755
  - uid=0
  - gid=0
  - mfsymlinks
parameters:
  skuName: Standard_LRS

{{- else if eq .Values.cluster.provider "aws" }}

---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: {{ include "goquorum-node.fullname" . }}-storage
  namespace: {{ .Release.Namespace }}
provisioner: {{ .Values.storage.aws.provisioner }}
reclaimPolicy: "{{.Values.storage.reclaimPolicy }}"
allowVolumeExpansion: true
parameters:
  type: {{ .Values.storage.aws.parameters.type }}
  fsType: {{ .Values.storage.aws.parameters.fsType }}

# ---
# apiVersion: storage.k8s.io/v1
# kind: StorageClass
# metadata:
#   name: {{ include "goquorum-node.fullname" . }}-storage
#   namespace: {{ .Release.Namespace }}
# provisioner: efs.csi.aws.com
# reclaimPolicy: "{{.Values.storage.reclaimPolicy }}"
# parameters:
#   provisioningMode: efs-ap
#   fileSystemId: #your_file_system_id
#   directoryPerms: "700"
#   gidRangeStart: "1000" # optional
#   gidRangeEnd: "2000" # optional
#   basePath: "/dynamic_provisioning" # optional

{{- else }}

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: {{ include "goquorum-node.fullname" . }}-storage
  namespace: {{ .Release.Namespace }}
  labels:
    type: local
spec:
  storageClassName: {{ include "goquorum-node.fullname" . }}-storage
  capacity:
    storage: "{{ .Values.storage.sizeLimit }}"
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/tmp/{{ include "goquorum-node.fullname" . }}"

{{- end }}

