
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "goquorum-node.fullname" . }}-pre-delete-hook
  labels:
{{- if eq .Values.cluster.provider "azure" }}
    aadpodidbinding: "{{ .Values.azure.identityName }}"
{{- end }}
    app.kubernetes.io/name: {{ include "goquorum-node.fullname" . }}-pre-install-hook
    app.kubernetes.io/instance: {{ .Release.Name }}  
  namespace: {{ .Release.Namespace }}
  annotations:
    helm.sh/hook: pre-delete
    helm.sh/hook-weight: "0"
    helm.sh/hook-delete-policy: "hook-succeeded"
spec:
  backoffLimit: 3
  completions: 1
  template:
    metadata:
      labels:
{{- if eq .Values.cluster.provider "azure" }}
        aadpodidbinding: "{{ .Values.azure.identityName }}"
{{- end}}      
        app.kubernetes.io/name: {{ include "goquorum-node.fullname" . }}-pre-install-hook
        app.kubernetes.io/instance: {{ .Release.Name }} 
    spec:
{{- if eq .Values.cluster.provider "aws" }}
      serviceAccountName: {{ .Values.aws.serviceAccountName }}
{{- else }}
      serviceAccountName: {{ include "goquorum-node.fullname" . }}-hooks-sa
{{- end }}    
      restartPolicy: "OnFailure"
      containers:
        - name: {{ template "goquorum-node.fullname" . }}-node-pre-delete-hook
          image: "{{ .Values.image.hooks.repository }}:{{ .Values.image.hooks.tag }}"
          imagePullPolicy: {{ .Values.image.hooks.pullPolicy }}
          command:
            - /bin/bash
            - -c
          args:
            - |

              echo "{{ template "goquorum-node.fullname" . }} Pre Delete hook ..."

{{- if eq .Values.cluster.provider "azure" }}

              function deleteSecret {
                key=$1
                fpath=$2
                az keyvault secret show --vault-name {{ .Values.azure.keyvaultName }} --name $key > /dev/null 2>&1
                if [ $? -eq 0 ]; then
                  az keyvault secret delete --vault-name {{ .Values.azure.keyvaultName }} --name $key
                fi
              }

              az login --identity --debug
              az account set --subscription {{ .Values.azure.subscriptionId }}

{{- else if eq .Values.cluster.provider "aws" }}

              function deleteSecret {
                key=$1
                aws secretsmanager describe-secret --secret-id $key > /dev/null 2>&1
                if [ $? -eq 0 ]; then
                  aws secretsmanager delete-secret --secret-id $key --recovery-window-in-days 7
                fi
              }

{{- else }}

              function deleteSecret {
                key=$1
                kubectl delete secret ${key} --namespace {{ .Release.Namespace }} 
              }

{{- end }}

              function delete_node_from_tessera_peers_configmap {
                kubectl -n {{ .Release.Namespace }} get configmap tessera-peers -o json
                # if there is no configmap, do nothing
                if [ $? -ne 0 ]; then
                  echo "No tessera-peers found, nothing to do..."
                # delete the one 
                else
                  echo "tessera-peers found, deleting {{ template "goquorum-node.fullname" . }}..."
                  echo $(kubectl -n {{ .Release.Namespace }} get configmap tessera-peers -o jsonpath='{.data.tesseraPeers}' ) > /tmp/tessera-peers.raw
                  cat /tmp/tessera-peers.raw | jq --arg NEEDLE "{{ template "goquorum-node.fullname" . }}" 'del(.[] | select( .url | contains($NEEDLE) ))' > /tmp/tessera-peers
                  kubectl -n {{ .Release.Namespace }} create configmap tessera-peers --from-file=tesseraPeers=/tmp/tessera-peers -o yaml --dry-run=client | kubectl replace -f -
                fi
              }

              function delete_node_from_enodes_configmap {
                kubectl -n {{ .Release.Namespace }}  get configmap goquorum-node-enodes -o json
                # if there is no configmap, do nothing
                if [ $? -ne 0 ]; then
                  echo "No peers found, nothing to do..."
                # delete the one 
                else    
                  echo "goquorum-node-enodes found, deleting {{ template "goquorum-node.fullname" . }}..."
                  echo $(kubectl -n {{ .Release.Namespace }} get configmap goquorum-node-enodes -o jsonpath='{.data.static-nodes\.json}' ) > /tmp/static-nodes.json.raw
                  cat /tmp/static-nodes.json.raw | jq --arg NEEDLE "{{ template "goquorum-node.fullname" . }}" 'del(.[] | select( . | contains($NEEDLE) ))' > /tmp/static-nodes.json
                  kubectl -n {{ .Release.Namespace }} create configmap goquorum-node-enodes --from-file=static-nodes.json=/tmp/static-nodes.json -o yaml --dry-run=client | kubectl replace -f -
                 
                  echo "Deleting node address configmap... "
                  kubectl delete configmap {{ template "goquorum-node.fullname" . }}-address --namespace {{ .Release.Namespace }}
                fi
              }

              delete_node_from_enodes_configmap
              delete_node_from_tessera_peers_configmap


{{- if .Values.quorumFlags.removeKeysOnDelete }}

{{- if eq .Values.cluster.provider "local" }}
                  
              deleteSecret {{ template "goquorum-node.fullname" . }}-keys
              deleteSecret {{ template "goquorum-node.fullname" . }}-account
{{- if .Values.quorumFlags.privacy }}
              deleteSecret {{ template "goquorum-node.fullname" . }}-tessera-keys
{{- end }}

{{- else }}

              deleteSecret {{ template "goquorum-node.fullname" . }}-nodekey
              deleteSecret {{ template "goquorum-node.fullname" . }}-nodekeypub
              deleteSecret {{ template "goquorum-node.fullname" . }}-enode
              deleteSecret {{ template "goquorum-node.fullname" . }}-accountPrivateKey
              deleteSecret {{ template "goquorum-node.fullname" . }}-accountPassword
              deleteSecret {{ template "goquorum-node.fullname" . }}-accountKeystore
              deleteSecret {{ template "goquorum-node.fullname" . }}-accountAddress
{{- if .Values.quorumFlags.privacy }}
              deleteSecret {{ template "goquorum-node.fullname" . }}-tmkey
              deleteSecret {{ template "goquorum-node.fullname" . }}-tmkeypub
              deleteSecret {{ template "goquorum-node.fullname" . }}-tmpassword
{{- end }}

{{- end }}

{{- end }}       

              echo "Completed"

